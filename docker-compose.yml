version: '3.8'

services:
  # Go Backend Service
  backend:
    image: husterxun/telegram-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: telegram-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./backend_data:/data
    networks:
      - telegram-net

  # Vue.js Frontend Service (served with Nginx)
  frontend:
    image: husterxun/telegram-frontend
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: telegram-frontend
    restart: unless-stopped
    ports:
      - "8888:8888"
    depends_on:
      - backend
    networks:
      - telegram-net
  
  # Nginx Reverse Proxy (Optional but Recommended for Production)
  # This setup uses the frontend container as the main entry point on port 80.
  # For a more advanced setup, you could add a dedicated Nginx reverse proxy
  # container here to route traffic to both backend and frontend.
  # The current approach is simpler and sufficient for this project.

# Define the network
networks:
  telegram-net:
    driver: bridge

# Define the volume for persistent backend data (SQLite database)
volumes:
  backend_data:
    driver: local 