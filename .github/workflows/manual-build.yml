name: Manual Build and Push

# 允许手动触发
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Custom tag for the images (optional)'
        required: false
        default: 'manual'

permissions:
  contents: read
  actions: read

env:
  DOCKER_USERNAME: husterxun
  BACKEND_IMAGE: husterxun/telegram-backend
  FRONTEND_IMAGE: husterxun/telegram-frontend
  BUILDER_IMAGE: husterxun/telegram-builder

jobs:
  manual-build-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Set image tag
      id: tag
      run: |
        if [ -n "${{ github.event.inputs.tag }}" ]; then
          echo "IMAGE_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "IMAGE_TAG=manual-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
        fi

    - name: Build and push builder image
      uses: docker/build-push-action@v5
      with:
        context: ./docker/builder
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.BUILDER_IMAGE }}:latest
          ${{ env.BUILDER_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.BACKEND_IMAGE }}:latest
          ${{ env.BACKEND_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./frontend/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.FRONTEND_IMAGE }}:latest
          ${{ env.FRONTEND_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build Summary
      run: |
        echo "🚀 Manual build completed successfully!"
        echo "📦 Images pushed to Docker Hub with tag: ${{ steps.tag.outputs.IMAGE_TAG }}"
        echo "   - ${{ env.BACKEND_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}"
        echo "   - ${{ env.FRONTEND_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}"
        echo "   - ${{ env.BUILDER_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}" 